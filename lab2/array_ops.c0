int[] squares_array(int x)
//@requires x >= 0;
//@ensures \length(\result) == x;
{
  int[] result_array = alloc_array(int, x);
  for(int i = 0; i < x; i++)
    //@loop_invariant i >= 0;
    {
      result_array[i] = i * i;
    }
  return result_array;
}

int sum_array(int[] A, int n)
//@requires 0 <= n && n < 1862;
{
  int sum = 0;
  for(int i = 0; i < n; i++)
    //@loop_invariant i >= 0;
    {
      sum = sum + A[i];
    }
  return sum;
}

int sum_array_recur(int[] A, int n)
//@requires 0 <= n && n < 1862;
{
  if(n == 0){
    return 0;
  }
  else {
    return sum_array_recur(A, n - 1) + A[n-1];
  }
}
