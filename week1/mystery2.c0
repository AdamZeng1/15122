/* Mystery function with a bug or two
 * 15-122 Principles of Imperative Computation
 */

int POW(int base, int exp)
//@requires exp >= 0;
{
    if (exp == 0) return 1;
    return base * POW(base, exp-1);
}


int f (int x, int y) 
//@requires y >= 0;
//@ensures \result == POW(x,y);
{
  int r = 1;
  int b = x; /* base */
  int e = y; /* exponent */
  while (e > 0) 
  //@loop_invariant e >= 0;
  //@loop_invariant r * POW(b,e) == POW(x,y);
  {
    if (e % 2 == 1) {
      r = b * r;
    }
    b = b * b;
    e = e / 2;
  }
  //@assert e == 0;
  return r;
}
